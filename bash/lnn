#!/bin/bash

# Target directory
target_bin_dir="$HOME/apps/bin/"
target_lib_dir="$HOME/apps/lib/"

# Ensure target directory exists
#mkdir -p "$target_dir"

# Get the current directory name
current_dir_name=$(basename "$PWD")

# Check for the --remove argument
if [[ "$1" == "--remove" ]]; then
  # Remove symlinks from the target directory
  #for file in "$target_dir"/*; do
  for file in *; do
    if [[ "$file" ]]; then
      # Check if it's a symlink and remove it
      if [[ -L "$target_bin_dir/$file" ]]; then
        #echo "$file"
        rm "$target_bin_dir/$file"
        echo "Removed symlink: $file"
      fi
      if file "$file" | grep -q 'shared object' || [ -L "$file" ]; then
        rm "$target_lib_dir/$file"
        echo "Removed symlink: $file"
      fi
    fi
  done
  exit 0
fi

# Loop through all files in the current directory
for file in *; do
  if [[ -f "$file" ]]; then
    if file "$file" | grep -q 'shared object' || [[ -L "$file" ]]; then
      target_path="$target_lib_dir$file"
      if [[ -e "$target_path" ]]; then
        echo "Warning: $target_path already exists. Skipping."
      else
        ln -s "$(pwd)/$file" "$target_path"
        echo "Created symlink: $target_path -> $(pwd)/$file"
      fi
    elif [[ -x "$file" ]]; then
      target_path="$target_bin_dir$file"
      if [[ -e "$target_path" ]]; then
        echo "Warning: $target_path already exists. Skipping."
      else
        ln -s "$(pwd)/$file" "$target_path"
        echo "Created symlink: $target_path -> $(pwd)/$file"
      fi
    else
      echo "Skipping non-executable, non-library file: $file"
    fi
  fi
done
